Creating of an Array

from array import * 
arrayName = array(typecode, [Initializers])
           or
import array
arrayName = array.array(type code, [array,items])





1. Creating Array

from array import * 
array1 = array('i', [10,20,30,40,50])   #array method
for x in array1: 
    print(x)

o/p
10
20
30
40
50

2. Accessing Array Element

from array import * 
array1 = array('i', [10,20,30,40,50]) 
print (array1[0]) 
print (array1[2])

o/p
10
20

3. Insertion Operation

from array import * 
array1 = array('i', [10,20,30,40,50]) 
array1.insert(1,60) 			# arrayName.insert(index, value) 
for x in array1: 
    print(x)

o/p
10
60
20
30
40
50

4. append

import array as arr
numbers = arr.array('i', [1, 2, 3])
numbers.append(4)
print(numbers)     

Output: array('i', [1, 2, 3, 4])


5. extend

import array as arr
numbers = arr.array('i', [1, 2, 3])
numbers.extend([5, 6, 7]) 
print(numbers)     

Output: array('i', [1, 2, 3, 4, 5, 6, 7])

6. concatination
(We can concatenate two arrays using + operator.)


import array as arr
odd = arr.array('i', [1, 3, 5])
even = arr.array('i', [2, 4, 6])
numbers = arr.array('i')   	# creating empty array of integer
numbers = odd + even
print(numbers) 

o/p
array('i', [1, 3, 5, 2, 4, 6])


7.Deletion Operation 
(by using remove())

from array import * 
array1 = array('i', [10,20,30,40,50]) 
array1.remove(40) 	#You can also use the 'del' statement of Python. Del array1[index]
for x in array1: 
    print(x)

o/p
10
20
30
50

8.Deletion Operation

import array as arr
number = arr.array('i', [1, 2, 8, 3, 4])
del number[2] # removing third element
print(number) # Output: array('i', [1, 2, 3, 4])

o/p
array('i', [1, 2, 3, 4])

9. search

from array import * 
array1 = array('i', [10,20,30,40,50]) 
print (array1.index(40))


o/p 
3


10.update

from array import * 
array1 = array('i', [10,20,30,40,50]) 
array1[2] = 80 
for x in array1: 
    print(x)

o/p
10
20
80
40
50


11. How to change or add elements?

import array as arr
numbers = arr.array('i', [1, 2, 3, 5, 7, 10])
# changing first element
numbers[0] = 0    
print(numbers)     # Output: array('i', [0, 2, 3, 5, 7, 10])
# changing 3rd to 5th element
numbers[2:5] = arr.array('i', [4, 6, 8])   
print(numbers)     # Output: array('i', [0, 2, 4, 6, 8, 10])


o/p

array('i', [0, 2, 3, 5, 7, 10])
array('i', [0, 2, 4, 6, 8, 10])



1.slicing of an array

import array as arr
numbers_list = [2, 5, 62, 5, 42, 52, 48, 5]
numbers_array = arr.array('i', numbers_list)
print(numbers_array[2:5]) # 3rd to 5th
print(numbers_array[:-5]) # beginning to 4th
print(numbers_array[5:])  # 6th to end
print(numbers_array[:])   # beginning to end

o/p
array('i', [62, 5, 42])
array('i', [2, 5, 62])
array('i', [52, 48, 5])
array('i', [2, 5, 62, 5, 42, 52, 48, 5])

2. Two dimensional array

from array import * 
T = [[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]] 
print(T[0]) 
print(T[1][2])

o/p
[11, 12, 5, 2]
10

3.array end line to print

from array import * 
T = [[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]]
print(T) 
for r in T: 
	for c in r: 
	    print(c,end = " ")
	    print()

o/p
[[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]]
11 
12 
5 
2 
15 
6 
10 
10 
8 
12 
5 
12 
15 
8 
6



 

4.Inserting Values in Two Dimensional Array

from array import * 
T = [[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]]
T.insert(2, [0,5,11,13,6])
for r in T: 
	for c in r: 
	    print(c,end = " ")
	    print()

o/p
11 
12 
5 
2 
15 
6 
10 
0 
5 
11 
13 
6 
10 
8 
12 
5 
12 
15 
8 
6

5. Updating Values in Two Dimensional Array11 

from array import * 
T = [[11, 12, 5, 2], [15, 6,10], [10, 8, 12, 5], [12,15,8,6]]
T[2] = [11,9] 
T[0][3] = 7
for r in T: 
	for c in r: 
	    print(c,end = " ")
	    print()

o/p

11 
12 
5 
7 
15 
6 
10 
11 
9 
12 
15 
8 
6

6. matrix addtion

X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]

Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]

result = [[0,0,0],
         [0,0,0],
         [0,0,0]]


for i in range(len(X)):
    #iterate through columns
    for j in range(len(X[0])):
        result[i][j] = X[i][j] + Y[i][j]

for r in result:
    print(r)

o/p
[17, 15, 4]
[10, 12, 9]
[11, 13, 18]

7.transpose of matrix

X = [[12,7],    [4 ,5],    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]
# iterate through rows
for i in range(len(X)):
   # iterate through columns
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)

o/p
[12, 4, 3]
[7, 5, 8]

8. multiply matrix

# Program to multiply two matrices using nested loops
# 3x3 matrix
X = [[12,7,3], [4 ,5,6], [7 ,8,9]]
# 3x4 matrix
Y = [[5,8,1,2], [6,7,3,0], [4,5,9,1]]
# result is 3x4
result = [[0,0,0,0],[0,0,0,0],[0,0,0,0]]
# iterate through rows of X
for i in range(len(X)):
   # iterate through columns of Y
   for j in range(len(Y[0])):
       # iterate through rows of Y
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)


o/p

[114, 160, 60, 27]
[74, 97, 73, 14]
[119, 157, 112, 23]


1. Array of integers, floats and complex Numbers

import numpy as np
A=np.array([[1, 2, 3], [3, 4, 5]])
print(A)
A=np.array([[1.1, 2, 3], [3, 4, 5]]) 			# Array of floats
print(A)
A=np.array([[1, 2, 3], [3, 4, 5]], dtype = complex) 	# Array of complex numbers
print(A)

o/p
[[1 2 3]
 [3 4 5]]
[[1.1 2.  3. ]
 [3.  4.  5. ]]
[[1.+0.j 2.+0.j 3.+0.j]
 [3.+0.j 4.+0.j 5.+0.j]]

 2. Array of zeros and ones

import numpy as np
zeros_array = np.zeros( (2, 3) )
print(zeros_array)

o/p

[[0. 0. 0.]
 [0. 0. 0.]]



import numpy as np
zeros_array = np.zeros( (2, 3) )
print(zeros_array)
ones_array = np.ones( (1, 5), dtype=np.int32 ) 		#specifying dtype
print(ones_array) 

o/p

[[0. 0. 0.]
 [0. 0. 0.]]
[[1 1 1 1 1]]

3. Using arange() and reshape()

import numpy as np
A = np.arange(4)
print('A =', A)
B = np.arange(12).reshape(2, 6)
print('B =', B)

o/p

A = [0 1 2 3]
B = [[ 0  1  2  3  4  5]
 [ 6  7  8  9 10 11]]


1. Copying from One Array to Another

import numpy as np
#creating an array a zeros square array of dimensions 2X2
zeros_array = np.zeros([2,2], dtype = int)
print ("Array zeros is:", zeros_array)
ones_array = np.ones([2,2], dtype = int)
print ("Array ones is :", ones_array)
#copying content from ones_array to zeros
np.copyto(zeros_array,ones_array)
print ("New zeros array :", zeros_array)

o/p

Array zeros is: [[0 0]
 [0 0]]
Array ones is : [[1 1]
 [1 1]]
New zeros array : [[1 1]
 [1 1]]

2. Addition of Two Matrices
We use + operator to add corresponding elements of two NumPy matrices.

import numpy as np
A = np.array([[2, 4], [5, -6]])
B = np.array([[9, -3], [3, 6]])
C = A + B      # element wise addition
print(C)

o/p

[[11  1]
 [ 8  0]]

3. Multiplication of Two Matrices

import numpy as np
 
A = np.array([[3, 6, 7], [5, -3, 0]])
B = np.array([[1, 1], [2, 1], [3, -3]])
C = A.dot(B)
print(C)


o/p 

[[ 36 -12]
 [ -1   2]]

4. Transpose of a Matrix

import numpy as np
A = np.array([[1, 1], [2, 1], [3, -3]])
print(A.transpose())    #A.T


o/p

[[ 1  2  3]
 [ 1  1 -3]]

5. Access matrix elements, rows and columns


import numpy as np
A = np.array([2, 4, 6, 8, 10])
print("A[0] =", A[0])     # First element     
print("A[2] =", A[2])     # Third element 
print("A[-1] =", A[-1])   # Last element

o/p 

A[0] = 2
A[2] = 6
A[-1] = 10


6.Now, let's see how we can access elements of a two-dimensional array (which is basically a matrix).


import numpy as np
A = np.array([[1, 4, 5, 12],
    [-5, 8, 9, 0],
    [-6, 7, 11, 19]])
#  First element of first row
print("A[0][0] =", A[0][0]) 
# Third element of second row
print("A[1][2] =", A[1][2])
# Last element of last row
print("A[-1][-1] =", A[-1][-1])

o/p

A[0][0] = 1
A[1][2] = 9
A[-1][-1] = 19

7.Access rows of a Matrix

import numpy as np
 
A = np.array([[1, 4, 5, 12], 
    [-5, 8, 9, 0],
    [-6, 7, 11, 19]])
 
print("A[0] =", A[0]) # First Row
print("A[2] =", A[2]) # Third Row
print("A[-1] =", A[-1]) # Last Row (3rd row in this case)
 
